class Edge {
    init(src, dst, weight) {
        this.src = src;
        this.dst = dst;
        this.weigt = weight;
    }
}

class Graph {
    init(nvertices) {
        this.nvertices = nvertices;
        
        this.adjList = [];
        for (var i = 0; i < nvertices; i++) {
            append(this.adjList, []);
        }
    }
    
    addEdge(edge) {
        append(this.adjList[edge.src], edge);
    }
    
    canReach(src, dst) {
        var visited = [];
        for (var i = 0; i < this.nvertices; i++) {
            append(visited, false);
        }
        
        this.dfs(src, visited);
        
        return visited[dst] == true;
    }
    
    dfs(vertex, visited) {
        if (visited[vertex]) {
            return;
        }
        
        visited[vertex] = true;
        
        for (var i = 0; i < len(this.adjList[vertex]); i++) {
            this.dfs(this.adjList[vertex][i].dst, visited);
        }
    }
}

var graph = Graph(10);
graph.addEdge(Edge(0, 1, 1));
graph.addEdge(Edge(1, 2, 1));
graph.addEdge(Edge(2, 3, 1));
graph.addEdge(Edge(4, 5, 1));

print(graph.canReach(0, 3));
print(graph.canReach(0, 5));
print(graph.canReach(4, 5));

